name: CI
on:
  pull_request:
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true

#env is covered elsewhere

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: get and checkout repo
        uses: actions/checkout@v4
      - name: setup python
        uses: actions/setup-python@v5
      - name: docker compose
        run: |
          docker compose -f docker-compose.yml up --build -d
      - name: wait for things to start
        run: sleep 10
      - name: test build
        working-directory: build
        run: |
          pip install -r requirements.txt
          pip install pytest
          python -m pytest
  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_and_test

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        #app
      - name: build docker image 
        run: docker build --no-cache -t sandwich-gang ./build
      - name: Tag the Docker Image
        run: docker tag sandwich-app snowyochole/sandwich-gang:latest
      - name: Push image to Docker Hub
        run: docker push $(echo $IMAGE_NAME):latest
        
  
  deploy:
    runs-on: ubuntu-latest
    needs: push_to_docker_hub

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Copy docker compose to digital ocean
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: "."
          target: "/home/${{ secrets.USERNAME }}/app/"

      - name: Deploy to Digital Ocean droplet via password
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          envs: GITHUB_SHA
          script: |
            cd /home/${{ secrets.USERNAME }}/app/
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            docker compose build --no-cache
            docker compose up -d